#!/bin/bash
pname=$(basename "$0")
dname=$(dirname "$0")
case "$dname" in /*);; *) dname="$(pwd)/$dname";; esac
source "$dname/saa-environ.sh"
xpager=$(which pageless 2>/dev/null || ${PAGER:-less})
usage="$pname [{-s|--saadir} SaaDir] [{-t|--target} {apk|ab|apk,ab}] [-l|--list|-q|--quiet|-v|--verbose|-n|--dryrun|--log|--nolog]
$pname {-h|--help}
Features:
  Put (or list) programs (apk files) or data (adb backups or raw /data
  directory images) files to a remote Android device using adb command.
  Putting the entity (programs and data) have to be stored to the 'apps'
  directory, which is a child of SaaDir directory specified by -s|--saadir.
  If the entities are already in a remote Android device, they are not
  putting or listing (The -o|--overwrite option disables this behavior.).
  And if the entity is already listed in the list: '$blacklist' file, they
  are not also putting or listing.

Options:
  -s|--saadir SaaDir
    Specify a directory in which putting 
  -t|--target {apk|ab|apk,ab}
    Target entities to put to a remote Android device. Default is apk,ab.
  -o|--overwrite
    If the entities are already on a remote Android device, do putting or
    listing.
  -l|--list
    Instead of putting entities, List entities to be put to a remote Android
    device.
  -q|--quiet
    No messages are displayed except error messages.
  -v|--verbose
    Additional messages are displayed. It has precedence over -q|--quiet.
  -n|--dryrun
    Only messages displayed, don't put to entities to the remote Android
    device.
  --log
    Logging almost all messages to logfiles. It is a default.
  --nolog
    No log files created. It is a default when -n|--dryrun or -l|--list.
  -h|--help
    This help message is displayed."

source "$dname/run.sh"
source "$dname/adbwrappers.sh"
source "$dname/trapwrapper.sh"
printcommandline() {
  echo -n $pname
  test -n "$SAADIR" && echo -n " --saadir '$SAADIR'"
  echo -n " --target '$targets'"
  $listp && echo -n " --list"
  $quietp && echo -n " --quiet"
  $verbosep && echo -n " --verbose"
  $dryrunp && echo -n " --dryrun"
  $nologp && echo -n " --nolog" || echo -n " --log"
}

targets='apk,ab'
overwritep=false
listp=false
quietp=false
verbosep=false
dryrunp=false
nologp=false
helpp=false
opterrp=false
declare -a opts
while true; do
  case "$1" in
  -|--) break;;
  --*) opts=("$1"); shift;;
  -*) for n in $(seq 1 $((${#1}-1))); do opts[$n]="-${1:$n:1}"; done; shift;;
  *) break;;
  esac
  for opt in "${opts[@]}"; do
    case "$opt" in
    -s|--saadir) SAADIR="$1"; shift;;
    -t|--target) targets="$1"; shift;;
    -o|--overwrite) overwritep=true;;
    -l|--list) listp=true;;
    -q|--quiet) quietp=true;;
    -v|--verbose) verbosep=true;;
    -n|--dryrun) dryrunp=true; verbosep=true; nologp=true;;
    --log) nologp=false;;
    --nolog) nologp=true;;
    -h|--help) helpp=true;;
    -*) echo "$opt: unknown option.">&2; opterrp=true;;
    esac
  done
done
$opterrp && exit 1
$helpp || test $# -ne 0 && { echo "$usage" | $xpager; exit;}
targets=$(IFS=$' \t\n,'; echo $targets)

#signals='EXIT SIGHUP SIGINT SIGQUIT SIGTERM ERR'
signals='SIGHUP SIGINT SIGQUIT SIGTERM'
workdir=$(mktemp --tmpdir --directory $pname.d.XXXXXXXXXX)
trap-open rmtmp $signals
trap-addcmd rmtmp "$nologp || copyworktolog; rm -rf '$workdir'"
trap-calltrap rmtmp

adev="$(adb devices -l)"
dev=$(echo "$adev" | adb-parsedev -b -o -r -s -u model) || exit 11
stamp=$(date +%Y%m%d-%H%M%S)
if $listp; then
  logdir="log.d-$stamp-$dev-putlist"
else
  logdir="log.d-$stamp-$dev-put"
fi
trap-removecmd rmtmp "rm -rf '$workdir'"
trap-addcmd rmtmp "$nologp || copyworktolog; rm -rf '$workdir'"
trap-calltrap rmtmp
if $nologp; then
  log=/dev/null
else
  log="$workdir/$logfilename"
fi
pkgondev="$workdir/$pkgondev_stem"
pkgtoput="$workdir/$pkgtoput_stem"
#filetoput="$workdir/$filetoput_stem"

(
  $quietp || echo "commandline: $(printcommandline)">&2
  $quietp || echo "device: $dev">&2
  $quietp || echo "timestamp: $stamp">&2
  $quietp || echo "SAADIR=$SAADIR">&2

  test -z "$SAADIR" && { echo "Please set envvar: SAADIR or use -s|--saadir option.">&2; exit 2;}
  cd "$SAADIR"
  appsdir=apps
  appsdir_escaped="$appsdir"  # TODO: to be regexp escaped
  test -d "$appsdir" ||
    { echo "$appsdir: no such a (applications) directory.">&2; exit 3;}
  test -r "$pkglist" ||
    { echo "$pkglist: no such a (packages list) file.">&2; exit 4;}

  $quietp || { echo; echo "**** compute supplements based on packages."; }>&2
  tPkgtoput_candidate="$workdir"/tPkgtoput_candidate
  trap-addcmd rmtmp "rm -f '$tPkgtoput_candidate'"
  trap-calltrap rmtmp
  $quietp || echo "make $pkgondev_stem: pkgs-list on the device.">&2
  get-android-apps list -3 >"$pkgondev" ||
    { echo "get-android-apps -list: failed.">&2; rm -f "$pkgondev"; exit 5;}
  $quietp || echo "make $pkgtoput_stem: list of pkgs to put (exist on the saadir but not on the device).">&2
  if $overwritep; then
    cat <(sed '/^[ \t]*#/d' "$pkglist") >"$tPkgtoput_candidate"
  else
    set-complement <(sed '/^[ \t]*#/d' "$pkglist") "$pkgondev" >"$tPkgtoput_candidate"
  fi ||
    { echo "make $pkgtoput: failed.">&2;  exit 6;}
  if test -f "$blacklist" && test -r "$blacklist"; then
    $quietp || echo "apply blacklist: $blacklist to $pkgtoput_stem.">&2
    set-complement "$tPkgtoput_candidate" <(sed '/^[ \t]*#/d' "$blacklist") >"$pkgtoput" ||
      { echo "apply $blacklist: failed.">&2; rm -f "$pkgtoput"; exit 7;}
    rm -f "$tPkgtoput_candidate"
  else
    mv "$tPkgtoput_candidate" "$pkgtoput"
  fi
  trap-removecmd rmtmp "rm -f '$tPkgtoput_candidate'"
  trap-calltrap rmtmp

  if $listp; then
    echo -------- Packages to put:
    cat "$pkgtoput"
    echo -------- end of Packages to put:
    rm "$pkgtoput"
  else
    if test $(cat "$pkgtoput" | wc -l) -eq 0; then
      $quietp || echo "No packages to put.">&2
    else
      
      for obj in $targets; do
        $quietp || echo "put $obj files of $pkgtoput_stem pkgs.">&2
        case $obj in
        apk)
          unset files
          for pkg in $(cat $pkgtoput); do
            apks=$(ls "$appsdir"/$pkg.apk "$appsdir"/$pkg-*.apk 2>/dev/null)
            if [ "$apks" = "" ]; then
              echo "$pkg: no apk-files for the package.">&2
            else
              files="$files${files:+ }$apks"
            fi
          done
          ;;
        *)
          files=$(sed "s|^|$appsdir_escaped/|;s|$|.$obj|" "$pkgtoput")
          ;;
        esac
        $dryrunp && dryrun_opt=' --dryrun' || dryrun_opt=
        dryrunp=false run put-android-apps${dryrun_opt} $obj $files || { test $? = 255 && break;} ||
          { test $? = 255 && break;}
      done
      
      $dryrunp && rm "$pkgtoput"
    fi
  fi

  if $listp || $dryrunp; then
    rm "$pkgondev"
  else
    cp -p "$pkglist" "$workdir/$pkglist-post"
    test -f "$blacklist" && cp -p "$blacklist" "$workdir/$blacklist"
    "$dname"/saa-make-list ||
      { echo "saa-make-list: failed.">&2; exit 32;}
    #"$dname"/saa-make-desc
  fi
) 2>&1 | tee "$log"

$nologp || copyworktolog
rm -rf "$workdir"
trap-close rmtmp
