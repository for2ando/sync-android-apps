#!/bin/bash
pname=$(basename "$0")
dname=$(dirname "$0")
source "$dname/saa-environ.sh"
case "$dname" in /*);; *) dname="$(pwd)/$dname";; esac
usage="$pname [Options] [PackageListFile [...]]
$pname {-h|--help}
Features:
  Make a list (text file) of package names and APK-versions (consists of apkNames and apkCodes) of Android applications from PackageListFile: '$pkglist' file.
  The default output locations are '$verlist' files on the same directories of designated PackageListFiles.
Options:
  -c|--stdout|--to-stdout
    output to stdout (default: output to $verlist).
  -h|--help
    This help message is displayed."

stdoutp=false
helpp=false
opterrp=false
declare -a opts
while true; do
  case "$1" in
  -|--) break;;
  --*) opts=("$1"); shift;;
  -*) for n in $(seq 1 $((${#1}-1))); do opts[$n]="-${1:$n:1}"; done; shift;;
  *) break;;
  esac
  for opt in "${opts[@]}"; do
    case "$opt" in
    -c|--stdout|--to-stdout) stdoutp=true;;
    -h|--help) helpp=true;;
    -*) echo "$opt: unknown option.">&2; opterrp=true;;
    esac
  done
done
$opterrp && exit 1
$helpp && { echo "$usage"; exit;}

test $# -eq 0 && {
  default="$pkglist"
  test "$(basename $(pwd))" = "$appsdir" && default="../$default"
  set "$default"
}

get-apk-versions() {
  while read appid; do
    apkpath="$appspath/$appid"
    for apk in $(ls "$apkpath.apk" "$apkpath-"*".apk" 2>/dev/null); do
      vername=$(aapt2 dump badging "$(cygpath -w $apk)" 2>/dev/null | grep "versionName" | sed -e "s/.*versionName='//" -e "s/'.*//")
      vercode=$(aapt2 dump badging "$(cygpath -w $apk)" 2>/dev/null | grep "versionCode" | sed -e "s/.*versionCode='//" -e "s/'.*//")
      echo "$(basename $apk)	$vername	$vercode"
    done
  done
}

declare -A outhis
declare -A bkhis
for list; do
  appspath="$(dirname $list)/$appsdir"
  test -d "$appspath" ||
      { echo "$pname: $appspath cannot find.">&2; exit 2; }

  $stdoutp || {
    output="$(dirname $list)/$verlist"
    outbk="$output.bk"
    test $outhis["$output"] = 1 || {
      test -e "$output" && mv "$output" "$outbk"
      touch "$output"
      outhis["$output"]=1
      bkhis["$outbk"]=1
    }
  }
  cat "$list" | {
    if $stdoutp; then
      get-apk-versions
    else
      get-apk-versions >>"$output"
    fi
  } ||
    {
      echo "$pname: $list: abort.">&2
      $stdoutp || mv "$outbk" "$output"
      exit 2
    }
done
rm -f "${!bkhis[@]}"
